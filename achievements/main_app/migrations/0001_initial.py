# Generated by Django 4.0.4 on 2022-06-10 09:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Отчество')),
                ('phone_number', models.CharField(blank=True, max_length=255, verbose_name='Телефон')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'активность',
                'verbose_name_plural': 'активности',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'площадка',
                'verbose_name_plural': 'площадки',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'местоположение',
                'verbose_name_plural': 'местоположения',
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.DateTimeField(null=True, verbose_name='Начало участия')),
                ('finished', models.DateTimeField(verbose_name='Конец участия')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Учащийся')),
            ],
            options={
                'verbose_name': 'участие',
                'verbose_name_plural': 'участия',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'предмет',
                'verbose_name_plural': 'предметы',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.activity')),
                ('chapter', models.CharField(max_length=255, verbose_name='Глава')),
                ('default_hours', models.IntegerField(null=True, verbose_name='Стандартное кол-во часов')),
                ('default_class', models.IntegerField(null=True, verbose_name='Стандартный класс проведения')),
                ('default_departments', models.ManyToManyField(to='main_app.department', verbose_name='Стандартные площадки проведения')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'курсы',
            },
            bases=('main_app.activity',),
        ),
        migrations.CreateModel(
            name='Olympiad',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.activity')),
                ('stage', models.CharField(max_length=255, null=True, verbose_name='Этап олимпиады')),
            ],
            options={
                'verbose_name': 'олимпиада',
                'verbose_name_plural': 'олимпиады',
            },
            bases=('main_app.activity',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.activity')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject', verbose_name='Предмет, дисциплина')),
            ],
            options={
                'verbose_name': 'проект',
                'verbose_name_plural': 'проекты',
            },
            bases=('main_app.activity',),
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.activity')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.subject', verbose_name='Предмет, дисциплина')),
            ],
            options={
                'verbose_name': 'семинар',
                'verbose_name_plural': 'семинары',
            },
            bases=('main_app.activity',),
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала обучения')),
                ('start_class', models.CharField(max_length=255, verbose_name='Класс начала обучения')),
                ('finish_date', models.DateField(verbose_name='Дата окончания обучения')),
                ('finish_class', models.CharField(max_length=255, verbose_name='Класс окончания обучения')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.department', verbose_name='Площадка')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Учащийся')),
            ],
            options={
                'verbose_name': 'обучение',
                'verbose_name_plural': 'обучения',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.location', verbose_name='Место проведения'),
        ),
        migrations.CreateModel(
            name='SeminarParticipation',
            fields=[
                ('participation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.participation')),
                ('hours', models.IntegerField(null=True, verbose_name='Количество часов')),
                ('mark', models.CharField(max_length=255, null=True, verbose_name='Итоговая оценка')),
                ('seminar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.seminar', verbose_name='Семинар')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seminar_teacher', to=settings.AUTH_USER_MODEL, verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'участие в семинарах',
                'verbose_name_plural': 'участия в семинарах',
            },
            bases=('main_app.participation',),
        ),
        migrations.CreateModel(
            name='ProjectParticipation',
            fields=[
                ('participation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.participation')),
                ('curator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_curator', to=settings.AUTH_USER_MODEL, verbose_name='Руководитель')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'участие в проектах',
                'verbose_name_plural': 'участия в проектах',
            },
            bases=('main_app.participation',),
        ),
        migrations.CreateModel(
            name='OlympiadParticipation',
            fields=[
                ('participation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.participation')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Звание')),
                ('prize', models.CharField(max_length=255, null=True, verbose_name='Награда')),
                ('is_team_member', models.BooleanField(null=True, verbose_name='В составе команды')),
                ('olympiad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.olympiad', verbose_name='Олимпиада')),
            ],
            options={
                'verbose_name': 'участие в олимпиадах',
                'verbose_name_plural': 'участия в олимпиадах',
            },
            bases=('main_app.participation', models.Model),
        ),
        migrations.CreateModel(
            name='CourseParticipation',
            fields=[
                ('participation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main_app.participation')),
                ('hours', models.IntegerField(verbose_name='Количество часов')),
                ('mark', models.CharField(max_length=255, verbose_name='Итоговая оценка')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.course', verbose_name='Курс')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_teacher', to=settings.AUTH_USER_MODEL, verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'участие в курсах',
                'verbose_name_plural': 'участия в курсах',
            },
            bases=('main_app.participation',),
        ),
    ]
